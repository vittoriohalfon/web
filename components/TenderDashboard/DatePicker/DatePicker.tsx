/**
 * This code was generated by Builder.io
 */
import React, { useState } from "react";
import { CalendarMonth } from "./CalendarMonth";
import { DatePickerFooter } from "./DatePickerFooter";

interface DatePickerProps {
  onDateSelect: (date: Date | null) => void;
}

export const DatePicker: React.FC<DatePickerProps> = ({ onDateSelect }) => {
  const [selectedDate, setSelectedDate] = useState<Date | null>(null);
  const [currentDate, setCurrentDate] = useState(new Date());

  const handleDateClick = (date: Date) => {
    setSelectedDate(date);
    onDateSelect(date);
  };

  const clearDate = () => {
    setSelectedDate(null);
    onDateSelect(null);
  };

  const handleMonthChange = (offset: number, calendarIndex: number) => {
    const newDate = new Date(currentDate);
    newDate.setMonth(currentDate.getMonth() + offset);
    setCurrentDate(newDate);
  };

  // Calculate the months to display (current month and next month)
  const firstMonth = currentDate.getMonth();
  const firstYear = currentDate.getFullYear();
  const secondMonth = (firstMonth + 1) % 12;
  const secondYear = firstMonth === 11 ? firstYear + 1 : firstYear;

  return (
    <div
      className="flex fixed top-2/4 left-2/4 items-start bg-white rounded-lg border border-solid shadow-xl -translate-x-2/4 -translate-y-2/4 border-zinc-100 z-[1000]"
      role="dialog"
      aria-label="Date Picker"
    >
      <div className="flex flex-col w-[656px] max-md:max-w-full">
        <div className="flex flex-wrap items-start max-md:max-w-full">
          <CalendarMonth
            month={firstMonth}
            year={firstYear}
            onDateClick={handleDateClick}
            selectedDate={selectedDate}
            onMonthChange={handleMonthChange}
            isFirstCalendar={true}
          />
          <CalendarMonth
            month={secondMonth}
            year={secondYear}
            onDateClick={handleDateClick}
            selectedDate={selectedDate}
            onMonthChange={handleMonthChange}
            isFirstCalendar={false}
          />
        </div>
        <DatePickerFooter
          selectedDate={selectedDate}
          onClear={clearDate}
          onApply={() => onDateSelect(selectedDate)}
        />
      </div>
    </div>
  );
};
